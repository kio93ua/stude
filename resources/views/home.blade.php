@extends('layouts.app')

@section('title','–ì–æ–ª–æ–≤–Ω–∞')

@section('content')

{{-- === HERO (Vue) === --}}
@php
    /** @var \App\Settings\HomePageSettings $s */
    $s = app(\App\Settings\HomePageSettings::class);

    $normalizeString = function ($value, string $fallback = ''): string {
        $trimmed = is_string($value) ? trim($value) : trim((string) ($value ?? ''));
        return $trimmed !== '' ? $trimmed : $fallback;
    };

  $normalizeUrl = function ($value, string $fallback = '#contact') use ($normalizeString): string {
      $url = $normalizeString($value, '');
      return $url !== '' ? $url : $fallback;
  };

  $normalizeOptionalUrl = function ($value): ?string {
      $trimmed = is_string($value) ? trim($value) : trim((string) ($value ?? ''));
      return $trimmed !== '' ? $trimmed : null;
  };

  $normalizeList = function ($value, array $fallback = []): array {
      if (is_string($value)) {
          $value = preg_split('/\s*,\s*/', $value, -1, PREG_SPLIT_NO_EMPTY);
      }

        if (! is_array($value)) {
            return $fallback;
        }

        $clean = array_values(array_filter(array_map(static fn($item) => is_string($item)
            ? trim($item)
            : (is_array($item)
                ? trim((string)($item['text'] ?? $item['label'] ?? $item['value'] ?? ($item[0] ?? '')))
                : ''
            ), $value), fn($v) => $v !== ''));

        return $clean ?: $fallback;
    };

    // URL –∫–∞—Ä—Ç–∏–Ω–∫–∏: http(s) –∞–±–æ —Ñ–∞–π–ª —É "public"
    $heroImageUrl = null;
    if (!empty($s->hero_image_path)) {
        $heroImageUrl = \Illuminate\Support\Str::startsWith($s->hero_image_path, ['http://','https://'])
            ? $s->hero_image_path
            : \Illuminate\Support\Facades\Storage::disk('public')->url($s->hero_image_path);
    }

    // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ bullets –î–û –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤
    $rawBullets = $s->hero_bullets ?? [];
    $bullets = array_values(array_filter(
        is_array($rawBullets)
            ? array_map(fn ($v) => is_string($v) ? trim($v) : (is_array($v) && isset($v[0]) ? trim((string)$v[0]) : ''), $rawBullets)
            : (is_string($rawBullets) ? preg_split('/\s*,\s*/', $rawBullets, -1, PREG_SPLIT_NO_EMPTY) : []),
        fn ($v) => $v !== ''
    ));

    $heroProps = [
        'headingTag' => 'h1',
        'badge'      => $s->hero_badge,
        'title'      => $s->hero_title,
        'subtitle'   => $s->hero_subtitle,
        'listTitle'  => '–©–æ –≤–∏ –æ—Ç—Ä–∏–º–∞—î—Ç–µ',
        // üëá –í–ê–ñ–õ–ò–í–û: –ü–æ–¥–∞—î–º–æ –≤–∂–µ-–Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤, –∞ –Ω–µ $s->hero_bullets
        'bullets'    => $bullets,
        'primary'    => ['text' => $s->hero_primary_text,   'href' => $s->hero_primary_href],
        'secondary'  => ['text' => $s->hero_secondary_text, 'href' => $s->hero_secondary_href],
        'imageUrl'   => $heroImageUrl,
         'topIcon1xUrl'    => asset('images/hero/top-icon@1x.webp'),
  'topIcon2xUrl'    => asset('images/hero/top-icon@2x.webp'),
  // BOTTOM icon (1x/2x)
  'bottomIcon1xUrl' => asset('images/hero/bottom-icon@1x.webp'),
  'bottomIcon2xUrl' => asset('images/hero/bottom-icon@2x.webp'),
    ];
@endphp

{{-- –±–∞–∂–∞–Ω–æ –ø—Ä–µ–ª–æ–∞–¥–∏—Ç–∏ LCP-—Ñ–æ—Ç–æ --}}
@if($heroImageUrl)
  <link rel="preload" as="image" href="{{ $heroImageUrl }}" imagesizes="(min-width:768px) 560px, 100vw">
@endif

<div
  data-vue="HeroSection"
  data-props='@json($heroProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'
>
  {{-- ‚¨áÔ∏è —Å–µ—Ä–≤–µ—Ä–Ω–∏–π skeleton –ü–†–Ø–ú–û –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –æ—Å—Ç—Ä–æ–≤–∞ --}}
  @include('partials.hero-skeleton')
</div>
@php
  /** @var \App\Settings\HomePageSettings $s */
  $s = app(\App\Settings\HomePageSettings::class);

  // –ø–æ–±—É–¥–æ–≤–∞ URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è: –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç ‚Äî –∑–æ–≤–Ω—ñ—à–Ω—ñ–π URL, —ñ–Ω–∞–∫—à–µ –ª–æ–∫–∞–ª—å–Ω–∏–π storage
  $vacancyImageUrl = null;
  if (!empty($s->vacancy_media_url)) {
      $vacancyImageUrl = trim($s->vacancy_media_url);
  } elseif (!empty($s->vacancy_media_path)) {
      $vacancyImageUrl = \Illuminate\Support\Str::startsWith($s->vacancy_media_path, ['http://','https://','/'])
          ? $s->vacancy_media_path
          : \Illuminate\Support\Facades\Storage::disk('public')->url($s->vacancy_media_path);
  }

  $vacancyProps = [
      'badge'    => trim((string)$s->vacancy_badge),
      'title'    => trim((string)$s->vacancy_title),
      'subtitle' => trim((string)($s->vacancy_subtitle ?? '')) ?: null,
      'bullets'  => is_array($s->vacancy_bullets) ? array_values(array_filter(array_map('trim', $s->vacancy_bullets))) : [],
      'mediaSrc' => $vacancyImageUrl ?: '/images/teacher-apply.webp',
      'ctaText'  => trim((string)$s->vacancy_cta_text),
      'formUrl'  => trim((string)$s->vacancy_cta_url),
  ];
@endphp

<div data-vue="TeacherVacancy"
     data-props='@json($vacancyProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'></div>


  
  {{-- === FOUNDER STORY (Vue) === --}}
@php
  $founderPhotoPath = $s->founder_photo_path ?? null;
  $founderPhotoUrl = null;
  if ($founderPhotoPath) {
      $founderPhotoUrl = \Illuminate\Support\Str::startsWith($founderPhotoPath, ['http://', 'https://'])
          ? $founderPhotoPath
          : \Illuminate\Support\Facades\Storage::disk('public')->url($founderPhotoPath);
  }
  $founderPhotoUrl = $founderPhotoUrl ?: asset('images/founder.png');

  $mapStorySections = function ($source, bool $withQuote = false) use ($normalizeString, $normalizeList) {
      if (! is_array($source)) {
          return [];
      }

      $result = [];
      foreach ($source as $entry) {
          if (! is_array($entry)) {
              continue;
          }

          $heading = $normalizeString($entry['heading'] ?? null, '');
          $body = $normalizeList($entry['body'] ?? null, []);

          if ($heading === '' || $body === []) {
              continue;
          }

          $record = [
              'heading' => $heading,
              'body' => $body,
          ];

          if ($withQuote) {
              $quoteText = $normalizeString($entry['quote_text'] ?? ($entry['quote']['text'] ?? null), '');
              if ($quoteText !== '') {
                  $record['quote'] = [
                      'text' => $quoteText,
                      'author' => $normalizeString($entry['quote_author'] ?? ($entry['quote']['author'] ?? null), ''),
                  ];
              }
          }

          $result[] = $record;
      }

      return $result;
  };

  $founderSections = $mapStorySections($s->founder_sections ?? null, true);
  $founderExtraSections = $mapStorySections($s->founder_extra_sections ?? null, false);

  $founderSocials = array_filter([
      'linkedin' => $normalizeOptionalUrl($s->founder_linkedin ?? null),
      'instagram'=> $normalizeOptionalUrl($s->founder_instagram ?? null),
      'site'     => $normalizeOptionalUrl($s->founder_site ?? null),
  ]);

  $founderProps = [
      'badge'    => $normalizeString($s->founder_badge ?? null, '–Ü—Å—Ç–æ—Ä—ñ—è –∑–∞—Å–Ω–æ–≤–Ω–∏–∫–∞'),
      'subtitle' => $normalizeString($s->founder_intro ?? null, ''),
      'founder'  => [
          'name'   => $normalizeString($s->founder_name ?? null, '–û–ª–µ–Ω–∞ –ö–æ–≤–∞–ª—å'),
          'role'   => $normalizeString($s->founder_role ?? null, '–ó–∞—Å–Ω–æ–≤–Ω–∏—Ü—è —à–∫–æ–ª–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó'),
          'photo'  => [
              'src' => $founderPhotoUrl,
              'alt' => $normalizeString($s->founder_photo_alt ?? null, $normalizeString($s->founder_name ?? null, '–û–ª–µ–Ω–∞ –ö–æ–≤–∞–ª—å')),
          ],
          'socials' => $founderSocials,
      ],
      'content' => $founderSections,
      'extra'   => $founderExtraSections,
  ];

  if ($founderProps['subtitle'] === '') {
      $founderProps['subtitle'] = null;
  }
@endphp

{{-- –±–∞–∂–∞–Ω–æ –ø—Ä–µ–ª–æ–∞–¥–∏—Ç–∏ —Ñ–æ—Ç–æ –∑–∞—Å–Ω–æ–≤–Ω–∏–∫–∞ —è–∫ LCP/near-LCP, —è–∫—â–æ –ø–æ—Ä—É—á –≥–µ—Ä–æ–π-–±–ª–æ–∫ --}}
<link rel="preload" as="image" href="{{ asset('images/founder.png') }}" imagesizes="(min-width:768px) 560px, 100vw">

<div
  id="founder"
  data-vue="FounderStory"
  data-props='@json($founderProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'>
  {{-- –∑–∞ –±–∞–∂–∞–Ω–Ω—è–º: server-skeleton —Ç—É—Ç --}}
</div>
{{-- === LESSONS (Vue) === --}}
@php
  // –ü—Ä–æ–ø—Å–∏ –¥–ª—è LessonsBlock.vue
 $lessonsProps = [
    'intro' => [
      'badge'    => $normalizeString($s->lessons_badge ?? null, '–ü—Ä–æ–≥—Ä–∞–º–∏ –Ω–∞–≤—á–∞–Ω–Ω—è'),
      'title'    => $normalizeString($s->lessons_title ?? null, '–ù–∞—à—ñ —É—Ä–æ–∫–∏'),
      'subtitle' => $normalizeString($s->lessons_subtitle ?? null, '–ë–∞–ª–∞–Ω—Å —Ä–æ–∑–º–æ–≤–Ω–æ—ó –ø—Ä–∞–∫—Ç–∏–∫–∏, –≥—Ä–∞–º–∞—Ç–∏–∫–∏ —Ç–∞ –ª–µ–∫—Å–∏–∫–∏. –ö–æ–∂–Ω–µ –∑–∞–Ω—è—Ç—Ç—è ‚Äî —â–µ –æ–¥–∏–Ω –∫—Ä–æ–∫ –¥–æ –≤—ñ–ª—å–Ω–æ—ó –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó.'),
    ],
    'videos' => (function () use ($s) {
      $raw = is_array($s->lessons_videos ?? null) ? $s->lessons_videos : [];
      return array_values(array_filter(array_map(function ($item) {
        if (! is_array($item)) {
          return null;
        }
        $id = trim((string)($item['id'] ?? ''));
        $title = trim((string)($item['title'] ?? ''));
        if ($id === '' || $title === '') {
          return null;
        }
        $description = trim((string)($item['description'] ?? ''));
        return [
          'id' => $id,
          'title' => $title,
          'description' => $description !== '' ? $description : null,
        ];
      }, $raw)));
    })(),
    'autoplayOnView' => (bool)($s->lessons_autoplay_on_view ?? false),
  ];
@endphp

<div
  id="lessons"
  data-vue="LessonsBlock"
  data-props='@json($lessonsProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'>
  {{-- optional: server-skeleton —Ç—É—Ç --}}
</div>
  

{{-- === ENROLL FORM (Vue) === --}}
<div
  data-vue="EnrollForm"
  data-props='{}'
>
  {{-- –∑–∞ –±–∞–∂–∞–Ω–Ω—è–º: server-skeleton —Ç—É—Ç --}}
</div>

     {{-- === PRICING (Vue) === --}}
@php
  $planDefaults = app(\App\Settings\HomePageSettings::class)->pricing_plans;
  $savedPlans = is_array($s->pricing_plans ?? null) ? $s->pricing_plans : [];

  $buildPlan = function (string $key) use ($planDefaults, $savedPlans, $normalizeString, $normalizeUrl, $normalizeList): array {
      $defaults = $planDefaults[$key] ?? [];
      $plan = is_array($savedPlans[$key] ?? null) ? $savedPlans[$key] : [];

      return [
          'title'       => $normalizeString($plan['title'] ?? null, $defaults['title'] ?? ''),
          'label'       => $normalizeString($plan['label'] ?? null, $defaults['label'] ?? ''),
          'description' => $normalizeString($plan['description'] ?? null, $defaults['description'] ?? ''),
          'price'       => $normalizeString($plan['price'] ?? null, $defaults['price'] ?? ''),
          'meta'        => $normalizeString($plan['meta'] ?? null, $defaults['meta'] ?? ''),
          'features'    => $normalizeList($plan['features'] ?? null, (array)($defaults['features'] ?? [])),
          'cta_text'    => $normalizeString($plan['cta_text'] ?? null, $defaults['cta_text'] ?? ''),
          'cta_href'    => $normalizeUrl($plan['cta_href'] ?? null, $defaults['cta_href'] ?? '#contact'),
      ];
  };

  $pricingPlans = [
      'group' => $buildPlan('group'),
      'pair' => $buildPlan('pair'),
      'individual' => $buildPlan('individual'),
  ];

  $pricingProps = [
      'badge'     => $normalizeString($s->pricing_badge ?? null, '–ü–∞–∫–µ—Ç–∏ –∑–∞–Ω—è—Ç—å'),
      'title'     => $normalizeString($s->pricing_title ?? null, '–û–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç, —â–æ –ø–∞—Å—É—î —Å–∞–º–µ —Ç–æ–±—ñ'),
      'subtitle'  => $normalizeString($s->pricing_subtitle ?? null, '–¢—Ä–∏ –ø—Ä–æ–∑–æ—Ä—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –∑ —á—ñ—Ç–∫–∏–º–∏ –ø–µ—Ä–µ–≤–∞–≥–∞–º–∏.'),
      'currency'  => $normalizeString($s->pricing_currency ?? null, '‚Ç¥'),
      'plans'     => $pricingPlans,
  ];
@endphp

<div
  id="pricing"
  data-vue="PricingCards"
  data-props='@json($pricingProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'>
</div>
@php
  $rawAdvantages = is_array($s->advantages_items ?? null) ? $s->advantages_items : [];
  $toUrl = function (?string $path) {
      $trimmed = is_string($path) ? trim($path) : '';
      if ($trimmed === '') {
          return null;
      }
      if (Str::startsWith($trimmed, ['http://', 'https://', '/'])) {
          return $trimmed;
      }
      return Storage::disk('public')->url($trimmed);
  };

  $advantagesItems = [];
  foreach ($rawAdvantages as $entry) {
      if (! is_array($entry)) {
          continue;
      }

      $title = $normalizeString($entry['title'] ?? null, '');
      $imageUrl = $toUrl($entry['image_path'] ?? null);
      if ($title === '' || ! $imageUrl) {
          continue;
      }

      $desc = $normalizeString($entry['desc'] ?? null, '');
      $desc = $desc !== '' ? $desc : null;
      $bullets = $normalizeList($entry['bullets'] ?? null, []);

      $icons = [];
      if (is_array($entry['icons'] ?? null)) {
          foreach ($entry['icons'] as $iconPath) {
              $iconUrl = $toUrl(is_string($iconPath) ? $iconPath : null);
              if ($iconUrl) {
                  $icons[] = $iconUrl;
              }
          }
      }

      $advantagesItems[] = [
          'title'   => $title,
          'desc'    => $desc,
          'bullets' => $bullets,
          'image'   => [
              'src' => $imageUrl,
              'alt' => $normalizeString($entry['image_alt'] ?? null, $title),
          ],
          'icons'   => $icons,
      ];
  }

  if ($advantagesItems === []) {
      $defaults = app(\App\Settings\HomePageSettings::class)->advantages_items;
      foreach ($defaults as $entry) {
          $imageUrl = $toUrl($entry['image_path'] ?? null);
          if (! $imageUrl) {
              continue;
          }
          $desc = $normalizeString($entry['desc'] ?? null, '');
          $desc = $desc !== '' ? $desc : null;
          $advantagesItems[] = [
              'title'   => $normalizeString($entry['title'] ?? null, ''),
              'desc'    => $desc,
              'bullets' => $normalizeList($entry['bullets'] ?? null, []),
              'image'   => [
                  'src' => $imageUrl,
                  'alt' => $normalizeString($entry['image_alt'] ?? null, ''),
              ],
              'icons'   => [],
          ];
      }
  }

  $advSubtitle = $normalizeString($s->advantages_subtitle ?? null, '');
  $advantagesProps = [
      'badge'    => $normalizeString($s->advantages_badge ?? null, '–ü–µ—Ä–µ–≤–∞–≥–∏ –Ω–∞–≤—á–∞–Ω–Ω—è'),
      'title'    => $normalizeString($s->advantages_title ?? null, '–í—á–∏—Å—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ ‚Äî —É –∑—Ä—É—á–Ω–æ–º—É –¥–ª—è —Ç–µ–±–µ —Ñ–æ—Ä–º–∞—Ç—ñ'),
      'subtitle' => $advSubtitle !== '' ? $advSubtitle : null,
      'cta'      => [
          'text' => $normalizeString($s->advantages_cta_text ?? null, '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è'),
          'href' => $normalizeUrl($s->advantages_cta_href ?? null, '#contact'),
      ],
      'items'    => $advantagesItems,
  ];
@endphp

<div
  data-vue="AdvantagesSplit"
  data-props='@json($advantagesProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'>
</div>
@php
  $reviewsRaw = is_array($s->reviews_items ?? null) ? $s->reviews_items : [];
  $reviewsList = [];
  foreach ($reviewsRaw as $entry) {
      if (! is_array($entry)) {
          continue;
      }

      $name = $normalizeString($entry['name'] ?? null, '');
      $text = $normalizeString($entry['text'] ?? null, '');

      if ($name === '' || $text === '') {
          continue;
      }

      $course = $normalizeString($entry['course'] ?? null, '');
      $stars = $entry['stars'] ?? 5;
      $stars = is_numeric($stars) ? max(0, min(5, (int) $stars)) : 5;

      $avatarPath = $entry['avatar_path'] ?? null;
      $avatarUrl = $normalizeOptionalUrl($entry['avatar_url'] ?? null);

      $avatar = null;
      if (is_string($avatarPath) && $avatarPath !== '') {
          if (\Illuminate\Support\Str::startsWith($avatarPath, ['http://', 'https://', '/'])) {
              $avatar = $avatarPath;
          } else {
              $avatar = \Illuminate\Support\Facades\Storage::disk('public')->url($avatarPath);
          }
      }

      if (! $avatar) {
          $avatar = $avatarUrl ?: 'https://i.pravatar.cc/96?img=15';
      }

      $reviewsList[] = [
          'name' => $name,
          'text' => $text,
          'course' => $course !== '' ? $course : null,
          'stars' => $stars,
          'avatar' => $avatar,
      ];
  }

  $fallbackReviews = [
      ["name"=>"–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª—å","avatar"=>"https://i.pravatar.cc/96?img=1","stars"=>5,"course"=>"IELTS","text"=>'–ö–ª–∞—Å–Ω—ñ —É—Ä–æ–∫–∏, –±–∞–≥–∞—Ç–æ —Ä–æ–∑–º–æ–≤–Ω–æ—ó –ø—Ä–∞–∫—Ç–∏–∫–∏ —ñ —á—ñ—Ç–∫–∏–π –ø–ª–∞–Ω –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏. –ó–∞ –º—ñ—Å—è—Ü—å —Å—Ç–∞–ª–∞ –≤–ø–µ–≤–Ω–µ–Ω—ñ—à–µ –≥–æ–≤–æ—Ä–∏—Ç–∏, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é!'],
      ["name"=>"–û–ª–µ–≥ –°.","avatar"=>"https://i.pravatar.cc/96?img=2","stars"=>5,"course"=>"Business English","text"=>'–°—É—á–∞—Å–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è, —Ä–µ–∞–ª—å–Ω—ñ –∫–µ–π—Å–∏ –∑ —Ä–æ–±–æ—Ç–∏. –î—É–∂–µ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è —Ñ–æ—Ä–º–∞—Ç ‚Äî –∑–∞–≤–∂–¥–∏ —Ç—Ä–∏–º–∞—î —Ñ–æ–∫—É—Å —ñ –¥–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç.'],
      ["name"=>"–Ü—Ä–∏–Ω–∞ –ß.","avatar"=>"https://i.pravatar.cc/96?img=3","stars"=>5,"course"=>"General","text"=>'–î—É–∂–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ –π –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥, –ø–æ–º—ñ—Ç–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å –≤–∂–µ –∑–∞ –∫—ñ–ª—å–∫–∞ —Ç–∏–∂–Ω—ñ–≤.'],
      ["name"=>"–ê–Ω–¥—Ä—ñ–π –ü.","avatar"=>"https://i.pravatar.cc/96?img=4","stars"=>5,"course"=>"Speaking Club","text"=>'–î–∏–Ω–∞–º—ñ—á–Ω—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ, –±–∞–≥–∞—Ç–æ –≥–æ–≤–æ—Ä—ñ–Ω–Ω—è, –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–æ–∫ —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ ‚Äî —Å—É–ø–µ—Ä!'],
  ];

  $reviewsProps = [
      'badge' => $normalizeString($s->reviews_badge ?? null, '–ù–∞—à—ñ –≤—ñ–¥–≥—É–∫–∏'),
      'title' => $normalizeString($s->reviews_title ?? null, '–ù–∞–º –¥–æ–≤—ñ—Ä—è—é—Ç—å ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ —Ü–µ –Ω–∞—à–∞ –ø–µ—Ä–µ–≤–∞–≥–∞'),
      'buttonText' => $normalizeString($s->reviews_button_text ?? null, '–ë—ñ–ª—å—à–µ –≤—ñ–¥–≥—É–∫—ñ–≤ –≤ Instagram'),
      'buttonUrl' => $normalizeUrl($s->reviews_button_url ?? null, 'https://instagram.com/your.profile'),
      'reviews' => $reviewsList !== [] ? $reviewsList : $fallbackReviews,
  ];
@endphp

<div
  data-vue="ReviewsMarquee"
  data-props='@json($reviewsProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'>
</div>
{{-- === FAQ (Vue) === --}}
@php
  $rawFaq = is_array($s->faq_items ?? null) ? $s->faq_items : [];
  $faqItems = [];

  foreach ($rawFaq as $entry) {
      if (! is_array($entry)) {
          continue;
      }

      $question = $normalizeString($entry['q'] ?? null, '');
      $answer = trim((string) ($entry['a'] ?? ''));

      if ($question === '' || $answer === '') {
          continue;
      }

      $faqItems[] = [
          'q' => $question,
          'a' => $answer,
      ];
  }

  if ($faqItems === []) {
      $faqItems = app(\App\Settings\HomePageSettings::class)->faq_items;
  }

  $faqSubtitle = $normalizeString($s->faq_subtitle ?? null, '');
  $faqProps = [
      'title'    => $normalizeString($s->faq_title ?? null, 'FAQ (–∫–æ—Ä–æ—Ç–∫–æ)'),
      'subtitle' => $faqSubtitle !== '' ? $faqSubtitle : null,
      'items'    => $faqItems,
  ];
@endphp

<div
  data-vue="FaqSection"
  data-props='@json($faqProps, JSON_UNESCAPED_UNICODE|JSON_UNESCAPED_SLASHES)'>
  {{-- –û–ø—Ü—ñ–π–Ω–∏–π —Å–ª–æ—Ç #intro, —è–∫—â–æ –∑–∞—Ö–æ—á–µ—à –¥–æ–¥–∞—Ç–∏ HTML-–≤—Å—Ç—É–ø:
  <div data-slot="intro">
    <p>–ó—ñ–±—Ä–∞–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —á–∞—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ —Ñ–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç—å, —Ç–µ—Ä–º—ñ–Ω–∏ —Ç–∞ –º–µ—Ç–æ–¥–∏–∫—É.</p>
    <p>–ù–µ –∑–Ω–∞–π—à–ª–∏ —Å–≤–æ—î? –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º ‚Äî –ø—ñ–¥–∫–∞–∂–µ–º–æ.</p>
  </div>
  --}}
</div>

 
@endsection
